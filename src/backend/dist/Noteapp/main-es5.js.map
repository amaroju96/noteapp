{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/student.service.ts","webpack:///src/app/services/teacher.service.ts","webpack:///src/app/students/notes/notes.component.ts","webpack:///src/app/students/notes/notes.component.html","webpack:///src/app/students/studentheader/studentheader.component.ts","webpack:///src/app/students/studentheader/studentheader.component.html","webpack:///src/app/students/students-routing.module.ts","webpack:///src/app/students/students.component.ts","webpack:///src/app/students/students.component.html","webpack:///src/app/students/students.module.ts","webpack:///src/app/students/teacher/teacher.component.ts","webpack:///src/app/students/teacher/teacher.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginComponent","service","route","loginForm","username","required","password","valid","login","value","subscribe","result","console","log","alert","reset","localStorage","setItem","navigateByUrl","RegisterComponent","studentService","studentclass","registerForm","name","email","gender","createStudent","registration","StudentService","http","notesSubject","data","post","logindata","content","get","getItem","next","put","providedIn","TeacherService","classsubject","classnumber","NotesComponent","studentservice","router","loading","notesData","showModel","currentId","getNotes","clear","contentnotes","updateNotes","response","deleteNotes","lgout","StudentheaderComponent","StudentsRoutingModule","forChild","StudentsComponent","textarealength","remaining","maximumwords","notesForm","notesdata","event","target","disabled","textareaContent","split","length","contentsplit","splice","join","count","saveNotes","submitnotes","formchanges","sendNotes","StudentsModule","TeacherComponent","teacherservice","classes","classList","editdata","i","currentclass","getclassdata","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { StudentsComponent } from './students/students.component';\n\n\n// tslint:disable-next-line: max-line-length\nconst routes: Routes = [{path: '', redirectTo: '/login', pathMatch: 'full'},\n                        {path: 'login', component: LoginComponent},\n                        {path: 'register', component: RegisterComponent},\n                        {path: 'studentdashboard', component: StudentsComponent}];\n                        //  { path: 'students', loadChildren: () => import('./students/students.module').then(m => m.StudentsModule) }\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<div>\n<router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { StudentsModule } from './students/students.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    StudentsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  constructor(private service: StudentService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  // login\n  login() {\n    if (this.loginForm.valid) {\n      this.service.login(this.loginForm.value).subscribe(result => {\n        console.log(result);\n        if (result['message'] === 'username not available') {\n          alert('Please enter an valid username');\n        }\n        if (result['message'] === 'Invaid password') {\n          alert('Please enter a valid password');\n        }\n        if (result['message'] === 'Login success') {\n          this.loginForm.reset();\n          localStorage.setItem('token', result['token']);\n          localStorage.setItem('name', result['name']);\n          localStorage.setItem('username', result['username']);\n          localStorage.setItem('class', result['class']);;\n          alert('Login Success');\n          if (result['username'] === 'Teacher') {\n            this.route.navigateByUrl('/teachersdashboard');\n          } else {\n            this.route.navigateByUrl('/studentdashboard');\n          }\n        }\n      });\n    }\n  }\n}\n","<div class=\"container-fluid imgbg\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\">\n            <div class=\"cardstyle\">\n                <div class=\"card p-4 cardstyle1\">\n                    <h4 class=\"text-danger\">Login to your Account</h4>\n                    <form class=\"py-3\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">Enter Username</label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Enter username\" id=\"name\" formControlName=\"username\">\n                            <span class=\"validate\" *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\">Please Enter username</span>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"pwd\">Password</label>\n                            <input type=\"password\" class=\"form-control form-control-sm\" placeholder=\"Enter password\" id=\"pwd\" formControlName=\"password\">\n                            <span class=\"validate\" *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\">Please Enter Password</span>\n                          </div>\n                          <div>\n                              <a routerLink=\"/register\"><p class=\"register\">Register Here?</p></a>\n                          </div>\n                          <button class=\"btn btn-sm btn-danger btn-block rounded-0\" [disabled]=\"!loginForm.valid\">Login</button>               \n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  studentclass = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  registerForm: FormGroup;\n  constructor(private studentService: StudentService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      name : new FormControl('', Validators.required),\n      username: new FormControl('', Validators.required),\n      email : new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      class : new FormControl('', Validators.required),\n      gender : new FormControl('', Validators.required)\n    });\n}\n\n// register\nregistration() {\n  console.log(this.registerForm.value);\n  if (this.registerForm.valid) {\n    this.studentService.createStudent(this.registerForm.value).subscribe(result => {\n      console.log(result);\n      if (result['message'] === 'Student Registred Success') { \n        alert('Registration Success');\n        this.registerForm.reset();\n        this.route.navigateByUrl('/login');\n      }\n      if (result['message'] === 'username name existed') {\n        alert('Username already existed choose another one..!')\n      }\n    });\n  }\n}\n}\n","<div class=\"container-fluid imgbg\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\">\n            <div class=\"cardstyle\">\n                <div class=\"card p-4 cardstyle1\">\n                    <h4 style=\"color: black;\">Create Your Account</h4>\n                    <form class=\"py-3\" [formGroup]=\"registerForm\" (ngSubmit)=\"registration()\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">Name</label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Enter name\" id=\"name\" formControlName=\"name\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"username\">Enter Username</label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Enter username\" id=\"username\" formControlName=\"username\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"gmail\">Enter Email</label>\n                            <input type=\"email\" class=\"form-control form-control-sm\" placeholder=\"Enter email\" id=\"gmail\" formControlName=\"email\">\n                        </div>\n                          <div class=\"form-group\">\n                            <label for=\"pwd\">Password</label>\n                            <input type=\"password\" class=\"form-control form-control-sm\" placeholder=\"Enter password\" id=\"pwd\" formControlName=\"password\">\n                          </div>\n                          <div class=\"form-group\">\n                            <label>Select your class</label>\n                            <select class=\"form-control form-control-sm\" formControlName=\"class\" formControlName=\"class\">\n                              <option [value]=\"class\" *ngFor=\"let class of studentclass\">{{class}}</option>\n                            </select>\n                          </div>\n                          <div class=\"form-group\">\n                            <div class=\"d-flex\">\n                                <div>\n                                    <label>Gender</label>\n                                </div>\n                                <div class=\"pl-3\">\n                                    <input type=\"radio\" value=\"Male\" formControlName=\"gender\" name=\"gender\">\n                                    Male\n                                </div>\n                                <div class=\"pl-3\">\n                                    <input type=\"radio\"  value=\"Female\" formControlName=\"gender\" name=\"gender\">\n                                    Female\n                                </div>\n                            </div>\n                          </div>\n                          <div>\n                              <a routerLink=\"/login\"><p class=\"register\">Go to login</p></a>\n                          </div>\n                          <button type=\"submit\" class=\"btn btn-sm btn-danger btn-block rounded-0\" [disabled]=\"!registerForm.valid\">Signup</button>               \n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  notesSubject = new Subject();\n\n  constructor(private http: HttpClient, private route: Router) { }\n  // register\n  createStudent(data) {\n    return this.http.post('http://localhost:8000/student/registration', data);\n  }\n  // login\n  login(logindata) {\n    return this.http.post('http://localhost:8000/student/login', logindata);\n  }\n\n  // save notes content\n  saveNotes(content) {\n    return this.http.post('http://localhost:8000/teacher/savenotes', content);\n  }\n\n  // get students notes data\n  getNotes() {\n    this.http.get('http://localhost:8000/student/notedrecords/' + localStorage.getItem('username')).subscribe(data => {\n      this.notesSubject.next(data['notesData']);\n    });\n  }\n  // edit notes\n  updateNotes(data) {\n    return this.http.put('http://localhost:8000/student/updatecontent', data);\n  }\n    // delete notes\n    deleteNotes(id) {\n      return this.http.delete('http://localhost:8000/student/deletenotes/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  classsubject = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) { }\n\n  getclassdata(classnumber) {\n    this.http.post('http://localhost:8000/student/classlist/' + classnumber, null).subscribe(data => {\n      this.classsubject.next(data);\n    });\n  }\n\n    // edit notes\n    updateNotes(data) {\n      return this.http.put('http://localhost:8000/teacher/updatecontent', data);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../../services/student.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n  username;\n  loading = true;\n  notesData: any[] = [];\n  showModel = false;\n  contentnotes;\n  currentId;\n  constructor(private studentservice: StudentService, private router:Router) { }\n\n  ngOnInit() {\n    console.log('Current id IS', this.currentId)\n    if (!localStorage.getItem('token')) {\n      alert('Please login');\n      this.router.navigateByUrl('/login');\n    }\n    this.studentservice.getNotes();\n    this.studentservice.notesSubject.subscribe((data: any) => {\n      this.loading = false;\n      this.notesData = data;\n    });\n  }\n\n  lgout() {\n    if (localStorage.getItem('token')) {\n      localStorage.clear();\n      alert('Logout Success')\n      this.router.navigateByUrl('/login');\n    }\n  }\n\n  // close model\n  closeModel() {\n    if (this.showModel) {\n      this.showModel = false;\n    }\n  }\n\n  // edit notes content\n  editNotes(id, content) {\n    this.currentId = id;\n    console.log(this.currentId);\n    this.contentnotes = content;\n    this.showModel = true;\n  }\n  // update \n  updateNotes() {\n    console.log('Curent id is', this.currentId);\n    console.log(this.contentnotes);\n    this.studentservice.updateNotes({id: this.currentId, content: this.contentnotes}).subscribe(response => {\n      if (response['message'] === 'Update success') {\n        this.showModel = false;\n        this.studentservice.getNotes();\n        alert('Update Success');\n      }\n    });\n  }\n  // delete notes content\n  deleteNotes(id) {\n    this.studentservice.deleteNotes(id).subscribe(result => {\n      if (result['message'] === 'Deleted success'){\n        this.studentservice.getNotes();\n        alert('Notes Deleted');\n      }\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-info\" style=\"max-width: 100vw;\">\n    <a class=\"navbar-brand\"><img src=\"../../../assets/notes.jpg\" alt=\"notes\" class=\"img-thumbnail\" width=\"100px\"></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold text-white\" style=\"cursor: pointer;\" routerLink=\"/studentdashboard\">Add Notes</a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold \" style=\"cursor: pointer;\" (click)=\"lgout()\"><img src=\"../../../assets/logout.png\" width=\"30px\" class=\"img-rounded\" alt=\"\"></a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <h4 class=\"text-center text-danger pt-3\" *ngIf=\"loading\">Data Loading.....!</h4>\n  <h4 class=\"text-center text-danger pt-3\" *ngIf=\"notesData.length == 0 && !loading\">No data found.....!</h4>\n  <div class=\"container-fluid\">\n    <table class=\"table taable-sm tableStyle\" *ngIf=\"notesData.length > 0\">\n      <thead>\n        <tr class=\"text-center\">\n          <th>S.no</th>\n          <th>Notes Content</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let notes of notesData; let i = index\">\n          <td>{{i+1}}</td>\n          <td style=\"width: 64vw;\" *ngIf=\"notes.notescontent.length > 150; else normal\">{{notes.notescontent | slice:0:150}}...</td>\n          <ng-template #normal>\n            <td style=\"width: 64vw;\">{{notes.notescontent}}</td>\n          </ng-template>\n          \n          <td>{{notes.time | date}}  {{notes.time | date:'h:mm a'}}</td>\n          <td><button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"editNotes(notes._id,notes.notescontent)\">Edit</button></td>\n          <td><button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"deleteNotes(notes._id)\">Delete</button></td>\n        </tr>\n        <tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"updatemodel\" *ngIf=\"showModel\">\n    <div class=\"card cstyle p-3\">\n      <form>\n        <div class=\"form-group\">\n          <div>\n            <label for=\"notesdata\">Update your notes :</label>\n            <label style=\"float: right; cursor: pointer; color: red;\" (click)=\"closeModel()\">Close</label>\n          </div>\n          <textarea class=\"form-control\" rows=\"5\" id=\"notesdata\"  style=\"resize: none;\" [(ngModel)]=\"contentnotes\" name=\"cotent\"></textarea>\n        </div>\n        <button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"updateNotes()\">Update</button>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudentService } from '../../services/student.service';\n\n@Component({\n  selector: 'app-studentheader',\n  templateUrl: './studentheader.component.html',\n  styleUrls: ['./studentheader.component.css']\n})\nexport class StudentheaderComponent implements OnInit {\n  constructor(private route: Router, private studentService: StudentService) { }\n\n  ngOnInit(): void {\n  }\n\n  // logout\n  lgout() {\n    if (localStorage.getItem('token')) {\n      localStorage.clear();\n      alert('Logout success');\n      this.route.navigateByUrl('/login');\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-info\">\r\n    <a class=\"navbar-brand\"><img src=\"../../../assets/notes.jpg\" alt=\"notes\" class=\"img-thumbnail\" width=\"100px\"></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link font-weight-bold text-white\" style=\"cursor: pointer;\" routerLink=\"/notes\">All Notes</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link font-weight-bold \" style=\"cursor: pointer;\" (click)=\"lgout()\"><img src=\"../../../assets/logout.png\" width=\"30px\" class=\"img-rounded\" alt=\"\"></a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotesComponent } from './notes/notes.component';\nimport { StudentsComponent } from './students.component';\nimport { TeacherComponent } from './teacher/teacher.component';\n\nconst routes: Routes = [{path: 'notes', component: NotesComponent},\n                        {path: 'studentdashboard', component: StudentsComponent},\n                        {path: 'teachersdashboard', component: TeacherComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StudentsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n\n  notesForm: FormGroup;\n  content;\n  count;\n  textareaContent: string;\n  textarealength = 200;\n  remaining = 200;\n  maximumwords =  true;\n  name: string;\n  class: string;\n\n  constructor(private studentservice: StudentService) { }\n\n  ngOnInit(): any {\n    this.class = localStorage.getItem('class');\n    this.name = localStorage.getItem('name');\n    this.notesForm = new FormGroup({\n      class : new FormControl('', Validators.required),\n      notesdata : new FormControl('', Validators.required)\n    });\n  }\n\n  // submit notes\n  submitnotes(event) {\n    event.target.disabled = false;\n    console.log(this.notesForm.value);\n    this.notesForm.reset();\n  }\n\n  formchanges(event) {\n    console.log(this.content);\n    console.log(this.notesForm.value);\n    this.textareaContent = this.notesForm.value.notesdata;\n    this.remaining = this.textarealength - this.textareaContent.split(' ').length;\n    if (this.content.split(' ').length >= 200) {\n      let contentsplit = this.content.split(' ');\n      // console.log(contentsplit);\n      this.content = contentsplit.splice(0, 200).join(' ');\n      this.count = this.content.length;\n      console.log(this.content);\n    }\n  }\n\n  // sending notes content\n  sendNotes() {\n    // console.log(this.notesForm);\n    var content = {data: this.notesForm.value, username: localStorage.getItem('username')};\n    // console.log(content);\n    this.studentservice.saveNotes(content).subscribe(result => {\n      console.log(result);\n      if (result['message'] === 'notes saved successfully') {\n        alert('Notes Saved successfully');\n      }\n    });\n  }\n\n}\n","<app-studentheader></app-studentheader>\n<div class=\"container-fluid imgbg\">\n  <div class=\"row\">\n    <marquee class=\"pt-3\"><h6>Welcome to dashboard {{name}} you can submit notes here</h6></marquee>\n      <div class=\"col-sm-4\"></div>\n      <div class=\"col-sm-4\">\n          <div class=\"cardstyle\">\n              <div class=\"card p-4 cardstyle1\">\n                  <form class=\"py-3\" [formGroup]=\"notesForm\" (ngSubmit)=\"submitnotes($event)\" (input)=\"formchanges($event)\">\n                    <div class=\"form-group\">\n                      <label>Select your class</label>\n                      <select class=\"form-control form-control-sm\" formControlName=\"class\">\n                        <option value=\"\">Select Your Class</option>\n                        <option [value]=\"class\" selected=\"selected\">{{class}} Class</option>\n                      </select>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"comment\">Submit your notes :</label>\n                      <textarea class=\"form-control\" rows=\"5\" id=\"comment\" placeholder=\"Maximum 200 words allowed\" style=\"resize: none;\" [maxlength]=\"count\" formControlName=\"notesdata\" [(ngModel)]=\"content\" name=\"coontent\"></textarea>\n                      <span>{{remaining}} words remaining</span>\n                    </div>\n                        <button class=\"btn btn-sm btn-danger rounded-0\" [disabled]=\"!notesForm.valid\" (click)=\"sendNotes()\">Submit</button>               \n                  </form>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-4\"></div>\n  </div>\n</div>\n\n<div>\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { StudentsRoutingModule } from './students-routing.module';\nimport { StudentsComponent } from './students.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { StudentheaderComponent } from './studentheader/studentheader.component';\nimport { TeacherComponent } from './teacher/teacher.component';\n\n@NgModule({\n  declarations: [StudentsComponent, NotesComponent, StudentheaderComponent, TeacherComponent],\n  imports: [\n    CommonModule,\n    StudentsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class StudentsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TeacherService } from '../../services/teacher.service';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n  classes = ['Firstclass', 'Secondclass', 'Thirdclass', 'Fourthclass', 'Fifthclass', 'Sixthclass', 'Seventhclass', 'Eighthclass', 'Ninthclass', 'Tenthclass']\n  classList = [];\n  showModel = false;\n  contentnotes: string;\n  currentId;\n  currentclass;\n  loading = false;\n  editdata = true;\n  constructor(private router: Router, private teacherservice: TeacherService) { }\n\n  ngOnInit(): void {\n  }\n\n  lgout() {\n    localStorage.clear();\n    alert('Logout Success');\n    this.router.navigateByUrl('/login');\n  }\n\n  curentStudent(i) {\n    this.currentclass = i;\n    this.editdata = false;\n    console.log(i);\n    this.teacherservice.getclassdata(i);\n    this.teacherservice.classsubject.subscribe(data => {\n      // console.log(data);\n      if (data) {\n        this.loading = false;\n        this.classList = data['message'];\n        console.log(this.classList);\n      }\n    });\n  }\n  editNotes(id, content) {\n    this.currentId = id;\n    console.log(this.currentId);\n    this.contentnotes = content;\n    this.showModel = true;\n  }\n  updateNotes() {\n    console.log('Curent id is', this.currentId);\n    console.log(this.contentnotes);\n    this.teacherservice.updateNotes({id: this.currentId, content: this.contentnotes}).subscribe(response => {\n      if (response['message'] === 'Update success') {\n        this.showModel = false;\n        this.teacherservice.getclassdata(this.currentclass);\n        alert('Update Success');\n      }\n    });\n  }\n  //close model\n  closeModel() {\n    this.showModel = false;\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-info\">\n    <a class=\"navbar-brand\"><img src=\"../../../assets/notes.jpg\" alt=\"notes\" class=\"img-thumbnail\" width=\"100px\"></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n        <!-- <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold text-white\" style=\"cursor: pointer;\" routerLink=\"/notes\">All Notes</a>\n        </li> -->\n        <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold \" style=\"cursor: pointer;\" (click)=\"lgout()\"><img src=\"../../assets//logout.png\" width=\"30px\" class=\"img-rounded\" alt=\"\"></a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <div class=\"container-fluid p-0\">\n    <div class=\"row\">\n      <div class=\"col-sm-3\">\n        <div class=\"sidenav\">\n          <div class=\"d-flex sidebaritem justify-content-center py-2\" *ngFor=\"let class of classes; let i = index\" (click)=\"curentStudent(i+1)\">\n            <p style=\"font-weight: 600; font-size: 14px;\">{{class}}</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-9\">\n        <h4 *ngIf=\"editdata\" class=\"text-center text-danger pt-3\">You can edit student notes</h4>\n        <h4 class=\"text-center text-danger pt-3\" *ngIf=\"loading\">Data Loading.....!</h4>\n        <h4 class=\"text-center text-danger pt-3\" *ngIf=\"classList.length == 0 && !loading\">No data found.....!</h4>\n        <div class=\"p-4\">\n          <table class=\"table taable-sm table-bordered tableStyle\" *ngIf=\"classList.length > 0\">\n            <thead>\n              <tr class=\"text-center\">\n                <th>S.no</th>\n                <th>Notes Content</th>\n                <th>Time</th>\n                <th>Update</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let class of classList; let i = index\">\n                <td>{{i+1}}</td>\n                <td  *ngIf=\"class.notescontent.length > 150; else normal\">{{class.notescontent | slice:0:150}}...</td>\n                <ng-template #normal>\n                  <td style=\"width: 64vw;\">{{class.notescontent}}</td>\n                </ng-template>\n                \n                <td>{{class.time | date}}  {{class.time | date:'h:mm a'}}</td>\n                <td><button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"editNotes(class._id,class.notescontent)\">Edit</button></td>\n              </tr>\n              <tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"updatemodel\" *ngIf=\"showModel\">\n    <div class=\"card cstyle p-3\">\n      <form>\n        <div class=\"form-group\">\n          <div>\n            <label for=\"notesdata\">Update your notes :</label>\n            <label style=\"float: right; cursor: pointer; color: red;\" (click)=\"closeModel()\">Close</label>\n          </div>\n          <textarea class=\"form-control\" rows=\"5\" id=\"notesdata\"  style=\"resize: none;\" [(ngModel)]=\"contentnotes\" name=\"cotent\"></textarea>\n        </div>\n        <button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"updateNotes()\">Update</button>\n      </form>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}