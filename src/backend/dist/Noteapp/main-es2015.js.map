{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/student.service.ts","./src/app/services/teacher.service.ts","./src/app/students/notes/notes.component.ts","./src/app/students/notes/notes.component.html","./src/app/students/studentheader/studentheader.component.ts","./src/app/students/studentheader/studentheader.component.html","./src/app/students/students-routing.module.ts","./src/app/students/students.component.ts","./src/app/students/students.component.html","./src/app/students/students.module.ts","./src/app/students/teacher/teacher.component.ts","./src/app/students/teacher/teacher.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACW;AACT;AACS;;;AAGlE,4CAA4C;AAC5C,MAAM,MAAM,GAAW,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;IACnD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,8EAAiB,EAAC,CAAC,CAAC;AAC1D,8GAA8G;AAM/H,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC,CAAC;QAC5C,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC,CAAC;gBACtD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,sEACA;QAAA,2EAA+B;QAC/B,4DAAM;;6FDKO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACuB;AACV;AAEE;AACT;AACU;AACS;AACN;;AAmBrD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,oEAAgB;YAChB,kEAAmB;YACnB,0DAAW;YACX,qEAAgB;YAChB,wEAAc;SACf;mIAIU,SAAS,mBAflB,2DAAY;QACZ,qEAAc;QACd,8EAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,kEAAmB;QACnB,0DAAW;QACX,qEAAgB;QAChB,wEAAc;6FAKL,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,8EAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,kEAAmB;oBACnB,0DAAW;oBACX,qEAAgB;oBAChB,wEAAc;iBACf;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICUxC,2EAAqG;IAAA,gFAAqB;IAAA,4DAAO;;;IAKjI,2EAAqG;IAAA,gFAAqB;IAAA,4DAAO;;ADNtJ,MAAM,cAAc;IAGzB,YAAoB,OAAuB,EAAU,KAAa;QAA9C,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAQ;IAAI,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,KAAK;QACH,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC1D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,wBAAwB,EAAE;oBAClD,KAAK,CAAC,gCAAgC,CAAC,CAAC;iBACzC;gBACD,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,iBAAiB,EAAE;oBAC3C,KAAK,CAAC,+BAA+B,CAAC,CAAC;iBACxC;gBACD,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,eAAe,EAAE;oBACzC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;oBACvB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC/C,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC7C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBAAA,CAAC;oBAChD,KAAK,CAAC,eAAe,CAAC,CAAC;oBACvB,IAAI,MAAM,CAAC,UAAU,CAAC,KAAK,SAAS,EAAE;wBACpC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;qBAChD;yBAAM;wBACL,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;qBAC/C;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;4EAtCU,cAAc;8FAAd,cAAc;QCV3B,yEACI;QAAA,yEACI;QAAA,oEAA4B;QAC5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAwB;QAAA,gFAAqB;QAAA,4DAAK;QAClD,0EACI;QADuC,0IAAY,WAAO,IAAC;QAC3D,yEACI;QAAA,4EAAkB;QAAA,0EAAc;QAAA,4DAAQ;QACxC,uEACA;QAAA,+GAAqG;QACvG,4DAAM;QACN,0EACE;QAAA,6EAAiB;QAAA,oEAAQ;QAAA,4DAAQ;QACjC,wEACA;QAAA,+GAAqG;QACvG,4DAAM;QACN,uEACI;QAAA,yEAA0B;QAAA,yEAAoB;QAAA,0EAAc;QAAA,4DAAI;QAAA,4DAAI;QACxE,4DAAM;QACN,8EAAwF;QAAA,iEAAK;QAAA,4DAAS;QAC5G,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEAA4B;QAChC,4DAAM;QACV,4DAAM;;QArBiC,0DAAuB;QAAvB,oFAAuB;QAIX,0DAA6E;QAA7E,+IAA6E;QAK7E,0DAA6E;QAA7E,+IAA6E;QAK5C,0DAA6B;QAA7B,0FAA6B;;6FDXpG,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;IC0BtC,6EAA2D;IAAA,uDAAS;IAAA,4DAAS;;;IAArE,2EAAe;IAAoC,0DAAS;IAAT,yEAAS;;ADjB3F,MAAM,iBAAiB;IAI5B,YAAoB,cAA8B,EAAU,KAAa;QAArD,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAFzE,iBAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAE8B,CAAC;IAE9E,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClD,CAAC,CAAC;IACP,CAAC;IAED,WAAW;IACX,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC5E,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,2BAA2B,EAAE;oBACrD,KAAK,CAAC,sBAAsB,CAAC,CAAC;oBAC9B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;oBAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;iBACpC;gBACD,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,uBAAuB,EAAE;oBACjD,KAAK,CAAC,gDAAgD,CAAC;iBACxD;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;kFAjCY,iBAAiB;iGAAjB,iBAAiB;QCV9B,yEACI;QAAA,yEACI;QAAA,oEAA4B;QAC5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAA0B;QAAA,8EAAmB;QAAA,4DAAK;QAClD,0EACI;QAD0C,6IAAY,kBAAc,IAAC;QACrE,yEACI;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,uEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,0EAAc;QAAA,4DAAQ;QAC5C,wEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAmB;QAAA,uEAAW;QAAA,4DAAQ;QACtC,wEACJ;QAAA,4DAAM;QACJ,0EACE;QAAA,6EAAiB;QAAA,oEAAQ;QAAA,4DAAQ;QACjC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,yEAAO;QAAA,6EAAiB;QAAA,4DAAQ;QAChC,8EACE;QAAA,sHAA2D;QAC7D,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,2EACI;QAAA,uEACI;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACzB,4DAAM;QACN,2EACI;QAAA,wEACA;QAAA,kEACJ;QAAA,4DAAM;QACN,2EACI;QAAA,wEACA;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QACR,4DAAM;QACN,uEACI;QAAA,yEAAuB;QAAA,yEAAoB;QAAA,uEAAW;QAAA,4DAAI;QAAA,4DAAI;QAClE,4DAAM;QACN,8EAAyG;QAAA,kEAAM;QAAA,4DAAS;QAC9H,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEAA4B;QAChC,4DAAM;QACV,4DAAM;;QAhDiC,0DAA0B;QAA1B,uFAA0B;QAoBX,2DAAkC;QAAlC,qFAAkC;QAqBU,2DAAgC;QAAhC,6FAAgC;;6FDtCrH,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEZ;;;;AAKxB,MAAM,cAAc;IAIzB,YAAoB,IAAgB,EAAU,KAAa;QAAvC,SAAI,GAAJ,IAAI,CAAY;QAAU,UAAK,GAAL,KAAK,CAAQ;QAF3D,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;IAEkC,CAAC;IAChE,WAAW;IACX,aAAa,CAAC,IAAI;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IACD,QAAQ;IACR,KAAK,CAAC,SAAS;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qCAAqC,EAAE,SAAS,CAAC,CAAC;IAC1E,CAAC;IAED,qBAAqB;IACrB,SAAS,CAAC,OAAO;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,0BAA0B;IAC1B,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/G,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,aAAa;IACb,WAAW,CAAC,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IACC,eAAe;IACf,WAAW,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,4CAA4C,GAAG,EAAE,CAAC,CAAC;IAC7E,CAAC;;4EAhCQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEK;;;AAKzC,MAAM,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,iBAAY,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;IAED,CAAC;IAEzC,YAAY,CAAC,WAAW;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9F,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAEC,aAAa;IACb,WAAW,CAAC,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;;4EAfQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICgBhD,yEAAyD;IAAA,6EAAkB;IAAA,4DAAK;;;IAChF,yEAAmF;IAAA,8EAAmB;IAAA,4DAAK;;;IAanG,yEAA8E;IAAA,uDAAuC;;IAAA,4DAAK;;;IAA5C,0DAAuC;IAAvC,2KAAuC;;;IAEnH,yEAAyB;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,sFAAsB;;;;IAJnD,qEACE;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,wHAA8E;IAC9E,sNACE;IAGF,qEAAI;IAAA,uDAAqD;;;IAAA,4DAAK;IAC9D,sEAAI;IAAA,8EAAkG;IAAlD,mYAAiD;IAAC,gEAAI;IAAA,4DAAS;IAAA,4DAAK;IACxH,sEAAI;IAAA,8EAAiF;IAAjC,8WAAgC;IAAC,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IAC3G,4DAAK;;;;;IATC,0DAAO;IAAP,0EAAO;IACc,0DAAoD;IAApD,oGAAoD;IAKzE,0DAAqD;IAArD,uPAAqD;;;IAhB/D,4EACE;IAAA,wEACE;IAAA,yEACE;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,wEAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACf,4DAAK;IACP,4DAAQ;IACR,wEACE;IAAA,sHACE;IAUF,iEACM;IAbR,4DACE;IAaJ,4DAAQ;;;IAbA,2DAA8C;IAA9C,qFAA8C;;;;IAgBxD,0EACE;IAAA,0EACE;IAAA,uEACE;IAAA,0EACE;IAAA,sEACE;IAAA,4EAAuB;IAAA,8EAAmB;IAAA,4DAAQ;IAClD,4EAAiF;IAAvB,sTAAsB;IAAC,gEAAK;IAAA,4DAAQ;IAChG,4DAAM;IACN,+EAAkI;IAApD,wVAA0B;IAAe,4DAAW;IACpI,4DAAM;IACN,8EAAwE;IAAxB,yTAAuB;IAAC,kEAAM;IAAA,4DAAS;IACzF,4DAAO;IACT,4DAAM;IACR,4DAAM;;;IALgF,0DAA0B;IAA1B,wFAA0B;;AD3C3G,MAAM,cAAc;IAOzB,YAAoB,cAA8B,EAAU,MAAa;QAArD,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAO;QALzE,YAAO,GAAG,IAAI,CAAC;QACf,cAAS,GAAU,EAAE,CAAC;QACtB,cAAS,GAAG,KAAK,CAAC;IAG2D,CAAC;IAE9E,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAClC,KAAK,CAAC,cAAc,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,KAAK,CAAC,gBAAgB,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACrC;IACH,CAAC;IAED,cAAc;IACd,UAAU;QACR,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;IACH,CAAC;IAED,qBAAqB;IACrB,SAAS,CAAC,EAAE,EAAE,OAAO;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IACD,UAAU;IACV,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrG,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,gBAAgB,EAAE;gBAC5C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;gBAC/B,KAAK,CAAC,gBAAgB,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uBAAuB;IACvB,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrD,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,iBAAiB,EAAC;gBAC1C,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;gBAC/B,KAAK,CAAC,eAAe,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;4EAhEU,cAAc;8FAAd,cAAc;QCT3B,yEACI;QAAA,uEAAwB;QAAA,oEAAyF;QAAjH,4DAAwB;QACxB,4EACI;QAAA,qEAAyC;QAC3C,4DAAS;QACX,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAwG;QAAA,oEAAS;QAAA,4DAAI;QACvH,4DAAK;QACL,yEACE;QAAA,wEAAiF;QAAlB,kIAAS,WAAO,IAAC;QAAC,sEAAkF;QAAnK,4DAAiF;QACnF,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,2GAAyD;QACzD,2GAAmF;QACnF,2EACE;QAAA,kHACE;QAsBJ,4DAAM;QAEN,8GACE;;QA7BuC,2DAAe;QAAf,6EAAe;QACf,0DAAyC;QAAzC,2GAAyC;QAEtC,0DAA4B;QAA5B,0FAA4B;QAyB/C,0DAAiB;QAAjB,+EAAiB;;6FDnC/B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,sBAAsB;IACjC,YAAoB,KAAa,EAAU,cAA8B;QAArD,UAAK,GAAL,KAAK,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAE9E,QAAQ;IACR,CAAC;IAED,SAAS;IACT,KAAK;QACH,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACpC;IACH,CAAC;;4FAbU,sBAAsB;sGAAtB,sBAAsB;QCTnC,yEACI;QAAA,uEAAwB;QAAA,oEAAyF;QAAjH,4DAAwB;QACxB,4EACI;QAAA,qEAAyC;QAC3C,4DAAS;QACX,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAA6F;QAAA,oEAAS;QAAA,4DAAI;QAC5G,4DAAK;QACL,yEACE;QAAA,wEAAiF;QAAlB,0IAAS,WAAO,IAAC;QAAC,sEAAkF;QAAnK,4DAAiF;QACnF,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;;6FDNK,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACA;AACM;;;AAE/D,MAAM,MAAM,GAAW,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,qEAAiB,EAAC;IACxD,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,2EAAgB,EAAC,CAAC,CAAC;AAM3E,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;6FAEX,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;AAQ7D,MAAM,iBAAiB;IAY5B,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QANlD,mBAAc,GAAG,GAAG,CAAC;QACrB,cAAS,GAAG,GAAG,CAAC;QAChB,iBAAY,GAAI,IAAI,CAAC;IAIiC,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,WAAW,CAAC,KAAK;QACf,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,WAAW,CAAC,KAAK;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QAC9E,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,GAAG,EAAE;YACzC,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3C,6BAA6B;YAC7B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,wBAAwB;IACxB,SAAS;QACP,+BAA+B;QAC/B,IAAI,OAAO,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,CAAC;QACvF,wBAAwB;QACxB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,0BAA0B,EAAE;gBACpD,KAAK,CAAC,0BAA0B,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFAvDU,iBAAiB;iGAAjB,iBAAiB;QCT9B,+EAAuC;QACvC,yEACE;QAAA,yEACE;QAAA,6EAAsB;QAAA,qEAAI;QAAA,uDAAuD;QAAA,4DAAK;QAAA,4DAAU;QAC9F,oEAA4B;QAC5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,2EACE;QADyC,oJAAY,uBAAmB,IAAC,sFAAU,uBAAmB,IAA7B;QACzE,0EACE;QAAA,yEAAO;QAAA,6EAAiB;QAAA,4DAAQ;QAChC,6EACE;QAAA,6EAAiB;QAAA,6EAAiB;QAAA,4DAAS;QAC3C,8EAA4C;QAAA,wDAAe;QAAA,4DAAS;QACtE,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,6EAAqB;QAAA,+EAAmB;QAAA,4DAAQ;QAChD,gFAAoN;QAAjD,0LAAqB;QAAiB,4DAAW;QACpN,wEAAM;QAAA,wDAA6B;QAAA,4DAAO;QAC5C,4DAAM;QACF,8EAAoG;QAAtB,0IAAS,eAAW,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACzH,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEAA4B;QAChC,4DAAM;QACR,4DAAM;QAEN,uEACE;QAAA,4EAA+B;QACjC,4DAAM;;QA7BwB,0DAAuD;QAAvD,iIAAuD;QAKhD,0DAAuB;QAAvB,oFAAuB;QAK5B,0DAAe;QAAf,4EAAe;QAAqB,0DAAe;QAAf,yFAAe;QAKsD,0DAAmB;QAAnB,gFAAmB;QAChI,0DAA6B;QAA7B,uGAA6B;QAEe,0DAA6B;QAA7B,0FAA6B;;6FDZxF,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACiB;AAEE;AACT;AACA;AACwB;AAClB;;AAWxD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAPhB;YACP,4DAAY;YACZ,8EAAqB;YACrB,0DAAW;YACX,kEAAmB;SACpB;mIAEU,cAAc,mBARV,qEAAiB,EAAE,qEAAc,EAAE,6FAAsB,EAAE,2EAAgB,aAExF,4DAAY;QACZ,8EAAqB;QACrB,0DAAW;QACX,kEAAmB;6FAGV,cAAc;cAT1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAiB,EAAE,qEAAc,EAAE,6FAAsB,EAAE,2EAAgB,CAAC;gBAC3F,OAAO,EAAE;oBACP,4DAAY;oBACZ,8EAAqB;oBACrB,0DAAW;oBACX,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICoBxC,0EACE;IADuG,qVAAyB,CAAC,KAAE;IACnI,wEAA8C;IAAA,uDAAS;IAAA,4DAAI;IAC7D,4DAAM;;;IAD0C,0DAAS;IAAT,0EAAS;;;IAK3D,yEAA0D;IAAA,qFAA0B;IAAA,4DAAK;;;IACzF,yEAAyD;IAAA,6EAAkB;IAAA,4DAAK;;;IAChF,yEAAmF;IAAA,8EAAmB;IAAA,4DAAK;;;IAcnG,qEAA0D;IAAA,uDAAuC;;IAAA,4DAAK;;;IAA5C,0DAAuC;IAAvC,4KAAuC;;;IAE/F,yEAAyB;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,uFAAsB;;;;IAJnD,qEACE;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,0HAA0D;IAC1D,wNACE;IAGF,qEAAI;IAAA,uDAAqD;;;IAAA,4DAAK;IAC9D,sEAAI;IAAA,8EAAkG;IAAlD,wYAAiD;IAAC,gEAAI;IAAA,4DAAS;IAAA,4DAAK;IAC1H,4DAAK;;;;;IARC,0DAAO;IAAP,0EAAO;IACN,0DAAoD;IAApD,qGAAoD;IAKrD,0DAAqD;IAArD,yPAAqD;;;IAjB/D,4EACE;IAAA,wEACE;IAAA,yEACE;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,wEAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,kEAAM;IAAA,4DAAK;IACjB,4DAAK;IACP,4DAAQ;IACR,yEACE;IAAA,wHACE;IASF,iEACM;IAZR,4DACE;IAYJ,4DAAQ;;;IAZA,2DAA8C;IAA9C,sFAA8C;;;;IAkB9D,0EACE;IAAA,0EACE;IAAA,uEACE;IAAA,0EACE;IAAA,sEACE;IAAA,4EAAuB;IAAA,8EAAmB;IAAA,4DAAQ;IAClD,4EAAiF;IAAvB,wTAAsB;IAAC,gEAAK;IAAA,4DAAQ;IAChG,4DAAM;IACN,+EAAkI;IAApD,0VAA0B;IAAe,4DAAW;IACpI,4DAAM;IACN,8EAAwE;IAAxB,2TAAuB;IAAC,kEAAM;IAAA,4DAAS;IACzF,4DAAO;IACT,4DAAM;IACR,4DAAM;;;IALgF,0DAA0B;IAA1B,yFAA0B;;ADzD3G,MAAM,gBAAgB;IAS3B,YAAoB,MAAc,EAAU,cAA8B;QAAtD,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAR1E,YAAO,GAAG,CAAC,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC;QAC3J,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,KAAK,CAAC;QAIlB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,IAAI,CAAC;IAC8D,CAAC;IAE/E,QAAQ;IACR,CAAC;IAED,KAAK;QACH,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,CAAC;QACb,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChD,qBAAqB;YACrB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,SAAS,CAAC,EAAE,EAAE,OAAO;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IACD,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrG,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,gBAAgB,EAAE;gBAC5C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACpD,KAAK,CAAC,gBAAgB,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,aAAa;IACb,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;;gFAtDU,gBAAgB;gGAAhB,gBAAgB;QCT7B,yEACI;QAAA,uEAAwB;QAAA,oEAAyF;QAAjH,4DAAwB;QACxB,4EACI;QAAA,qEAAyC;QAC3C,4DAAS;QACX,yEACE;QAAA,wEACE;QAGA,wEACE;QAAA,uEAAiF;QAAlB,mIAAS,WAAO,IAAC;QAAC,oEAAgF;QAAjK,4DAAiF;QACnF,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,+GACE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,6GAA0D;QAC1D,6GAAyD;QACzD,6GAAmF;QACnF,2EACE;QAAA,oHACE;QAsBJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,gHACE;;QAvCkE,2DAA4C;QAA5C,gFAA4C;QAMtG,0DAAgB;QAAhB,8EAAgB;QACqB,0DAAe;QAAf,6EAAe;QACf,0DAAyC;QAAzC,2GAAyC;QAEvB,0DAA4B;QAA5B,0FAA4B;QA4BpE,0DAAiB;QAAjB,+EAAiB;;6FDjD/B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { StudentsComponent } from './students/students.component';\n\n\n// tslint:disable-next-line: max-line-length\nconst routes: Routes = [{path: '', redirectTo: '/login', pathMatch: 'full'},\n                        {path: 'login', component: LoginComponent},\n                        {path: 'register', component: RegisterComponent},\n                        {path: 'studentdashboard', component: StudentsComponent}];\n                        //  { path: 'students', loadChildren: () => import('./students/students.module').then(m => m.StudentsModule) }\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<div>\n<router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { StudentsModule } from './students/students.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    StudentsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  constructor(private service: StudentService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  // login\n  login() {\n    if (this.loginForm.valid) {\n      this.service.login(this.loginForm.value).subscribe(result => {\n        console.log(result);\n        if (result['message'] === 'username not available') {\n          alert('Please enter an valid username');\n        }\n        if (result['message'] === 'Invaid password') {\n          alert('Please enter a valid password');\n        }\n        if (result['message'] === 'Login success') {\n          this.loginForm.reset();\n          localStorage.setItem('token', result['token']);\n          localStorage.setItem('name', result['name']);\n          localStorage.setItem('username', result['username']);\n          localStorage.setItem('class', result['class']);;\n          alert('Login Success');\n          if (result['username'] === 'Teacher') {\n            this.route.navigateByUrl('/teachersdashboard');\n          } else {\n            this.route.navigateByUrl('/studentdashboard');\n          }\n        }\n      });\n    }\n  }\n}\n","<div class=\"container-fluid imgbg\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\">\n            <div class=\"cardstyle\">\n                <div class=\"card p-4 cardstyle1\">\n                    <h4 class=\"text-danger\">Login to your Account</h4>\n                    <form class=\"py-3\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">Enter Username</label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Enter username\" id=\"name\" formControlName=\"username\">\n                            <span class=\"validate\" *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\">Please Enter username</span>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"pwd\">Password</label>\n                            <input type=\"password\" class=\"form-control form-control-sm\" placeholder=\"Enter password\" id=\"pwd\" formControlName=\"password\">\n                            <span class=\"validate\" *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\">Please Enter Password</span>\n                          </div>\n                          <div>\n                              <a routerLink=\"/register\"><p class=\"register\">Register Here?</p></a>\n                          </div>\n                          <button class=\"btn btn-sm btn-danger btn-block rounded-0\" [disabled]=\"!loginForm.valid\">Login</button>               \n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  studentclass = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  registerForm: FormGroup;\n  constructor(private studentService: StudentService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      name : new FormControl('', Validators.required),\n      username: new FormControl('', Validators.required),\n      email : new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      class : new FormControl('', Validators.required),\n      gender : new FormControl('', Validators.required)\n    });\n}\n\n// register\nregistration() {\n  console.log(this.registerForm.value);\n  if (this.registerForm.valid) {\n    this.studentService.createStudent(this.registerForm.value).subscribe(result => {\n      console.log(result);\n      if (result['message'] === 'Student Registred Success') { \n        alert('Registration Success');\n        this.registerForm.reset();\n        this.route.navigateByUrl('/login');\n      }\n      if (result['message'] === 'username name existed') {\n        alert('Username already existed choose another one..!')\n      }\n    });\n  }\n}\n}\n","<div class=\"container-fluid imgbg\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-4\">\n            <div class=\"cardstyle\">\n                <div class=\"card p-4 cardstyle1\">\n                    <h4 style=\"color: black;\">Create Your Account</h4>\n                    <form class=\"py-3\" [formGroup]=\"registerForm\" (ngSubmit)=\"registration()\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">Name</label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Enter name\" id=\"name\" formControlName=\"name\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"username\">Enter Username</label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Enter username\" id=\"username\" formControlName=\"username\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"gmail\">Enter Email</label>\n                            <input type=\"email\" class=\"form-control form-control-sm\" placeholder=\"Enter email\" id=\"gmail\" formControlName=\"email\">\n                        </div>\n                          <div class=\"form-group\">\n                            <label for=\"pwd\">Password</label>\n                            <input type=\"password\" class=\"form-control form-control-sm\" placeholder=\"Enter password\" id=\"pwd\" formControlName=\"password\">\n                          </div>\n                          <div class=\"form-group\">\n                            <label>Select your class</label>\n                            <select class=\"form-control form-control-sm\" formControlName=\"class\" formControlName=\"class\">\n                              <option [value]=\"class\" *ngFor=\"let class of studentclass\">{{class}}</option>\n                            </select>\n                          </div>\n                          <div class=\"form-group\">\n                            <div class=\"d-flex\">\n                                <div>\n                                    <label>Gender</label>\n                                </div>\n                                <div class=\"pl-3\">\n                                    <input type=\"radio\" value=\"Male\" formControlName=\"gender\" name=\"gender\">\n                                    Male\n                                </div>\n                                <div class=\"pl-3\">\n                                    <input type=\"radio\"  value=\"Female\" formControlName=\"gender\" name=\"gender\">\n                                    Female\n                                </div>\n                            </div>\n                          </div>\n                          <div>\n                              <a routerLink=\"/login\"><p class=\"register\">Go to login</p></a>\n                          </div>\n                          <button type=\"submit\" class=\"btn btn-sm btn-danger btn-block rounded-0\" [disabled]=\"!registerForm.valid\">Signup</button>               \n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  notesSubject = new Subject();\n\n  constructor(private http: HttpClient, private route: Router) { }\n  // register\n  createStudent(data) {\n    return this.http.post('http://localhost:8000/student/registration', data);\n  }\n  // login\n  login(logindata) {\n    return this.http.post('http://localhost:8000/student/login', logindata);\n  }\n\n  // save notes content\n  saveNotes(content) {\n    return this.http.post('http://localhost:8000/teacher/savenotes', content);\n  }\n\n  // get students notes data\n  getNotes() {\n    this.http.get('http://localhost:8000/student/notedrecords/' + localStorage.getItem('username')).subscribe(data => {\n      this.notesSubject.next(data['notesData']);\n    });\n  }\n  // edit notes\n  updateNotes(data) {\n    return this.http.put('http://localhost:8000/student/updatecontent', data);\n  }\n    // delete notes\n    deleteNotes(id) {\n      return this.http.delete('http://localhost:8000/student/deletenotes/' + id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  classsubject = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) { }\n\n  getclassdata(classnumber) {\n    this.http.post('http://localhost:8000/student/classlist/' + classnumber, null).subscribe(data => {\n      this.classsubject.next(data);\n    });\n  }\n\n    // edit notes\n    updateNotes(data) {\n      return this.http.put('http://localhost:8000/teacher/updatecontent', data);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../../services/student.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n  username;\n  loading = true;\n  notesData: any[] = [];\n  showModel = false;\n  contentnotes;\n  currentId;\n  constructor(private studentservice: StudentService, private router:Router) { }\n\n  ngOnInit() {\n    console.log('Current id IS', this.currentId)\n    if (!localStorage.getItem('token')) {\n      alert('Please login');\n      this.router.navigateByUrl('/login');\n    }\n    this.studentservice.getNotes();\n    this.studentservice.notesSubject.subscribe((data: any) => {\n      this.loading = false;\n      this.notesData = data;\n    });\n  }\n\n  lgout() {\n    if (localStorage.getItem('token')) {\n      localStorage.clear();\n      alert('Logout Success')\n      this.router.navigateByUrl('/login');\n    }\n  }\n\n  // close model\n  closeModel() {\n    if (this.showModel) {\n      this.showModel = false;\n    }\n  }\n\n  // edit notes content\n  editNotes(id, content) {\n    this.currentId = id;\n    console.log(this.currentId);\n    this.contentnotes = content;\n    this.showModel = true;\n  }\n  // update \n  updateNotes() {\n    console.log('Curent id is', this.currentId);\n    console.log(this.contentnotes);\n    this.studentservice.updateNotes({id: this.currentId, content: this.contentnotes}).subscribe(response => {\n      if (response['message'] === 'Update success') {\n        this.showModel = false;\n        this.studentservice.getNotes();\n        alert('Update Success');\n      }\n    });\n  }\n  // delete notes content\n  deleteNotes(id) {\n    this.studentservice.deleteNotes(id).subscribe(result => {\n      if (result['message'] === 'Deleted success'){\n        this.studentservice.getNotes();\n        alert('Notes Deleted');\n      }\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-info\" style=\"max-width: 100vw;\">\n    <a class=\"navbar-brand\"><img src=\"../../../assets/notes.jpg\" alt=\"notes\" class=\"img-thumbnail\" width=\"100px\"></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold text-white\" style=\"cursor: pointer;\" routerLink=\"/studentdashboard\">Add Notes</a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold \" style=\"cursor: pointer;\" (click)=\"lgout()\"><img src=\"../../../assets/logout.png\" width=\"30px\" class=\"img-rounded\" alt=\"\"></a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <h4 class=\"text-center text-danger pt-3\" *ngIf=\"loading\">Data Loading.....!</h4>\n  <h4 class=\"text-center text-danger pt-3\" *ngIf=\"notesData.length == 0 && !loading\">No data found.....!</h4>\n  <div class=\"container-fluid\">\n    <table class=\"table taable-sm tableStyle\" *ngIf=\"notesData.length > 0\">\n      <thead>\n        <tr class=\"text-center\">\n          <th>S.no</th>\n          <th>Notes Content</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let notes of notesData; let i = index\">\n          <td>{{i+1}}</td>\n          <td style=\"width: 64vw;\" *ngIf=\"notes.notescontent.length > 150; else normal\">{{notes.notescontent | slice:0:150}}...</td>\n          <ng-template #normal>\n            <td style=\"width: 64vw;\">{{notes.notescontent}}</td>\n          </ng-template>\n          \n          <td>{{notes.time | date}}  {{notes.time | date:'h:mm a'}}</td>\n          <td><button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"editNotes(notes._id,notes.notescontent)\">Edit</button></td>\n          <td><button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"deleteNotes(notes._id)\">Delete</button></td>\n        </tr>\n        <tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"updatemodel\" *ngIf=\"showModel\">\n    <div class=\"card cstyle p-3\">\n      <form>\n        <div class=\"form-group\">\n          <div>\n            <label for=\"notesdata\">Update your notes :</label>\n            <label style=\"float: right; cursor: pointer; color: red;\" (click)=\"closeModel()\">Close</label>\n          </div>\n          <textarea class=\"form-control\" rows=\"5\" id=\"notesdata\"  style=\"resize: none;\" [(ngModel)]=\"contentnotes\" name=\"cotent\"></textarea>\n        </div>\n        <button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"updateNotes()\">Update</button>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudentService } from '../../services/student.service';\n\n@Component({\n  selector: 'app-studentheader',\n  templateUrl: './studentheader.component.html',\n  styleUrls: ['./studentheader.component.css']\n})\nexport class StudentheaderComponent implements OnInit {\n  constructor(private route: Router, private studentService: StudentService) { }\n\n  ngOnInit(): void {\n  }\n\n  // logout\n  lgout() {\n    if (localStorage.getItem('token')) {\n      localStorage.clear();\n      alert('Logout success');\n      this.route.navigateByUrl('/login');\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-info\">\r\n    <a class=\"navbar-brand\"><img src=\"../../../assets/notes.jpg\" alt=\"notes\" class=\"img-thumbnail\" width=\"100px\"></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link font-weight-bold text-white\" style=\"cursor: pointer;\" routerLink=\"/notes\">All Notes</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link font-weight-bold \" style=\"cursor: pointer;\" (click)=\"lgout()\"><img src=\"../../../assets/logout.png\" width=\"30px\" class=\"img-rounded\" alt=\"\"></a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotesComponent } from './notes/notes.component';\nimport { StudentsComponent } from './students.component';\nimport { TeacherComponent } from './teacher/teacher.component';\n\nconst routes: Routes = [{path: 'notes', component: NotesComponent},\n                        {path: 'studentdashboard', component: StudentsComponent},\n                        {path: 'teachersdashboard', component: TeacherComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StudentsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n\n  notesForm: FormGroup;\n  content;\n  count;\n  textareaContent: string;\n  textarealength = 200;\n  remaining = 200;\n  maximumwords =  true;\n  name: string;\n  class: string;\n\n  constructor(private studentservice: StudentService) { }\n\n  ngOnInit(): any {\n    this.class = localStorage.getItem('class');\n    this.name = localStorage.getItem('name');\n    this.notesForm = new FormGroup({\n      class : new FormControl('', Validators.required),\n      notesdata : new FormControl('', Validators.required)\n    });\n  }\n\n  // submit notes\n  submitnotes(event) {\n    event.target.disabled = false;\n    console.log(this.notesForm.value);\n    this.notesForm.reset();\n  }\n\n  formchanges(event) {\n    console.log(this.content);\n    console.log(this.notesForm.value);\n    this.textareaContent = this.notesForm.value.notesdata;\n    this.remaining = this.textarealength - this.textareaContent.split(' ').length;\n    if (this.content.split(' ').length >= 200) {\n      let contentsplit = this.content.split(' ');\n      // console.log(contentsplit);\n      this.content = contentsplit.splice(0, 200).join(' ');\n      this.count = this.content.length;\n      console.log(this.content);\n    }\n  }\n\n  // sending notes content\n  sendNotes() {\n    // console.log(this.notesForm);\n    var content = {data: this.notesForm.value, username: localStorage.getItem('username')};\n    // console.log(content);\n    this.studentservice.saveNotes(content).subscribe(result => {\n      console.log(result);\n      if (result['message'] === 'notes saved successfully') {\n        alert('Notes Saved successfully');\n      }\n    });\n  }\n\n}\n","<app-studentheader></app-studentheader>\n<div class=\"container-fluid imgbg\">\n  <div class=\"row\">\n    <marquee class=\"pt-3\"><h6>Welcome to dashboard {{name}} you can submit notes here</h6></marquee>\n      <div class=\"col-sm-4\"></div>\n      <div class=\"col-sm-4\">\n          <div class=\"cardstyle\">\n              <div class=\"card p-4 cardstyle1\">\n                  <form class=\"py-3\" [formGroup]=\"notesForm\" (ngSubmit)=\"submitnotes($event)\" (input)=\"formchanges($event)\">\n                    <div class=\"form-group\">\n                      <label>Select your class</label>\n                      <select class=\"form-control form-control-sm\" formControlName=\"class\">\n                        <option value=\"\">Select Your Class</option>\n                        <option [value]=\"class\" selected=\"selected\">{{class}} Class</option>\n                      </select>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"comment\">Submit your notes :</label>\n                      <textarea class=\"form-control\" rows=\"5\" id=\"comment\" placeholder=\"Maximum 200 words allowed\" style=\"resize: none;\" [maxlength]=\"count\" formControlName=\"notesdata\" [(ngModel)]=\"content\" name=\"coontent\"></textarea>\n                      <span>{{remaining}} words remaining</span>\n                    </div>\n                        <button class=\"btn btn-sm btn-danger rounded-0\" [disabled]=\"!notesForm.valid\" (click)=\"sendNotes()\">Submit</button>               \n                  </form>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-4\"></div>\n  </div>\n</div>\n\n<div>\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { StudentsRoutingModule } from './students-routing.module';\nimport { StudentsComponent } from './students.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { StudentheaderComponent } from './studentheader/studentheader.component';\nimport { TeacherComponent } from './teacher/teacher.component';\n\n@NgModule({\n  declarations: [StudentsComponent, NotesComponent, StudentheaderComponent, TeacherComponent],\n  imports: [\n    CommonModule,\n    StudentsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class StudentsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TeacherService } from '../../services/teacher.service';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n  classes = ['Firstclass', 'Secondclass', 'Thirdclass', 'Fourthclass', 'Fifthclass', 'Sixthclass', 'Seventhclass', 'Eighthclass', 'Ninthclass', 'Tenthclass']\n  classList = [];\n  showModel = false;\n  contentnotes: string;\n  currentId;\n  currentclass;\n  loading = false;\n  editdata = true;\n  constructor(private router: Router, private teacherservice: TeacherService) { }\n\n  ngOnInit(): void {\n  }\n\n  lgout() {\n    localStorage.clear();\n    alert('Logout Success');\n    this.router.navigateByUrl('/login');\n  }\n\n  curentStudent(i) {\n    this.currentclass = i;\n    this.editdata = false;\n    console.log(i);\n    this.teacherservice.getclassdata(i);\n    this.teacherservice.classsubject.subscribe(data => {\n      // console.log(data);\n      if (data) {\n        this.loading = false;\n        this.classList = data['message'];\n        console.log(this.classList);\n      }\n    });\n  }\n  editNotes(id, content) {\n    this.currentId = id;\n    console.log(this.currentId);\n    this.contentnotes = content;\n    this.showModel = true;\n  }\n  updateNotes() {\n    console.log('Curent id is', this.currentId);\n    console.log(this.contentnotes);\n    this.teacherservice.updateNotes({id: this.currentId, content: this.contentnotes}).subscribe(response => {\n      if (response['message'] === 'Update success') {\n        this.showModel = false;\n        this.teacherservice.getclassdata(this.currentclass);\n        alert('Update Success');\n      }\n    });\n  }\n  //close model\n  closeModel() {\n    this.showModel = false;\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-info\">\n    <a class=\"navbar-brand\"><img src=\"../../../assets/notes.jpg\" alt=\"notes\" class=\"img-thumbnail\" width=\"100px\"></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n        <!-- <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold text-white\" style=\"cursor: pointer;\" routerLink=\"/notes\">All Notes</a>\n        </li> -->\n        <li class=\"nav-item active\">\n          <a class=\"nav-link font-weight-bold \" style=\"cursor: pointer;\" (click)=\"lgout()\"><img src=\"../../assets//logout.png\" width=\"30px\" class=\"img-rounded\" alt=\"\"></a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <div class=\"container-fluid p-0\">\n    <div class=\"row\">\n      <div class=\"col-sm-3\">\n        <div class=\"sidenav\">\n          <div class=\"d-flex sidebaritem justify-content-center py-2\" *ngFor=\"let class of classes; let i = index\" (click)=\"curentStudent(i+1)\">\n            <p style=\"font-weight: 600; font-size: 14px;\">{{class}}</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-9\">\n        <h4 *ngIf=\"editdata\" class=\"text-center text-danger pt-3\">You can edit student notes</h4>\n        <h4 class=\"text-center text-danger pt-3\" *ngIf=\"loading\">Data Loading.....!</h4>\n        <h4 class=\"text-center text-danger pt-3\" *ngIf=\"classList.length == 0 && !loading\">No data found.....!</h4>\n        <div class=\"p-4\">\n          <table class=\"table taable-sm table-bordered tableStyle\" *ngIf=\"classList.length > 0\">\n            <thead>\n              <tr class=\"text-center\">\n                <th>S.no</th>\n                <th>Notes Content</th>\n                <th>Time</th>\n                <th>Update</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let class of classList; let i = index\">\n                <td>{{i+1}}</td>\n                <td  *ngIf=\"class.notescontent.length > 150; else normal\">{{class.notescontent | slice:0:150}}...</td>\n                <ng-template #normal>\n                  <td style=\"width: 64vw;\">{{class.notescontent}}</td>\n                </ng-template>\n                \n                <td>{{class.time | date}}  {{class.time | date:'h:mm a'}}</td>\n                <td><button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"editNotes(class._id,class.notescontent)\">Edit</button></td>\n              </tr>\n              <tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"updatemodel\" *ngIf=\"showModel\">\n    <div class=\"card cstyle p-3\">\n      <form>\n        <div class=\"form-group\">\n          <div>\n            <label for=\"notesdata\">Update your notes :</label>\n            <label style=\"float: right; cursor: pointer; color: red;\" (click)=\"closeModel()\">Close</label>\n          </div>\n          <textarea class=\"form-control\" rows=\"5\" id=\"notesdata\"  style=\"resize: none;\" [(ngModel)]=\"contentnotes\" name=\"cotent\"></textarea>\n        </div>\n        <button class=\"btn btn-danger btn-sm rounded-0\" (click)=\"updateNotes()\">Update</button>\n      </form>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}